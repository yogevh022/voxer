<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="486" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="469.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="469.00"> </text><svg id="frames" x="10" width="1180" total_samples="73"><g><title>`0x7FF8291FCC70 (1 samples, 1.37%)</title><rect x="0.0000%" y="421" width="1.3699%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>`0x7FF8291FD407 (1 samples, 1.37%)</title><rect x="1.3699%" y="389" width="1.3699%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="1.6199%" y="399.50"></text></g><g><title>`0x7FF829250F84 (1 samples, 1.37%)</title><rect x="1.3699%" y="373" width="1.3699%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.6199%" y="383.50"></text></g><g><title>`0x7FF829210128 (1 samples, 1.37%)</title><rect x="2.7397%" y="341" width="1.3699%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="2.9897%" y="351.50"></text></g><g><title>`0x7FF8291E26B7 (1 samples, 1.37%)</title><rect x="2.7397%" y="325" width="1.3699%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="2.9897%" y="335.50"></text></g><g><title>`0x7FF829210BD6 (1 samples, 1.37%)</title><rect x="4.1096%" y="325" width="1.3699%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="1"/><text x="4.3596%" y="335.50"></text></g><g><title>`0x7FF829210516 (1 samples, 1.37%)</title><rect x="4.1096%" y="309" width="1.3699%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="4.3596%" y="319.50"></text></g><g><title>`0x7FF8292106F7 (1 samples, 1.37%)</title><rect x="4.1096%" y="293" width="1.3699%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="4.3596%" y="303.50"></text></g><g><title>`0x7FF82921086B (1 samples, 1.37%)</title><rect x="4.1096%" y="277" width="1.3699%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="4.3596%" y="287.50"></text></g><g><title>`0x7FF82924DC94 (1 samples, 1.37%)</title><rect x="4.1096%" y="261" width="1.3699%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="4.3596%" y="271.50"></text></g><g><title>`0x7FF8292111EE (1 samples, 1.37%)</title><rect x="5.4795%" y="309" width="1.3699%" height="15" fill="rgb(250,228,42)" fg:x="4" fg:w="1"/><text x="5.7295%" y="319.50"></text></g><g><title>`0x7FF82924DE34 (1 samples, 1.37%)</title><rect x="5.4795%" y="293" width="1.3699%" height="15" fill="rgb(240,193,28)" fg:x="4" fg:w="1"/><text x="5.7295%" y="303.50"></text></g><g><title>`0x7FF8291FD79A (4 samples, 5.48%)</title><rect x="2.7397%" y="389" width="5.4795%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="4"/><text x="2.9897%" y="399.50">`0x7FF8..</text></g><g><title>`0x7FF829213720 (4 samples, 5.48%)</title><rect x="2.7397%" y="373" width="5.4795%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="4"/><text x="2.9897%" y="383.50">`0x7FF8..</text></g><g><title>`0x7FF8292100D3 (4 samples, 5.48%)</title><rect x="2.7397%" y="357" width="5.4795%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="4"/><text x="2.9897%" y="367.50">`0x7FF8..</text></g><g><title>`0x7FF829210160 (3 samples, 4.11%)</title><rect x="4.1096%" y="341" width="4.1096%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="3"/><text x="4.3596%" y="351.50">`0x7..</text></g><g><title>`0x7FF829210CA0 (2 samples, 2.74%)</title><rect x="5.4795%" y="325" width="2.7397%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="2"/><text x="5.7295%" y="335.50">`0..</text></g><g><title>`0x7FF829211243 (1 samples, 1.37%)</title><rect x="6.8493%" y="309" width="1.3699%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="7.0993%" y="319.50"></text></g><g><title>`0x7FF8291C4C14 (1 samples, 1.37%)</title><rect x="6.8493%" y="293" width="1.3699%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="7.0993%" y="303.50"></text></g><g><title>`0x7FF8291C7BA2 (1 samples, 1.37%)</title><rect x="6.8493%" y="277" width="1.3699%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="1"/><text x="7.0993%" y="287.50"></text></g><g><title>`0x7FF8291BF49F (1 samples, 1.37%)</title><rect x="6.8493%" y="261" width="1.3699%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="1"/><text x="7.0993%" y="271.50"></text></g><g><title>`0x7FF8291C2A66 (1 samples, 1.37%)</title><rect x="6.8493%" y="245" width="1.3699%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="7.0993%" y="255.50"></text></g><g><title>`0x7FF8291C2BD9 (1 samples, 1.37%)</title><rect x="6.8493%" y="229" width="1.3699%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="7.0993%" y="239.50"></text></g><g><title>`0x7FF829250304 (1 samples, 1.37%)</title><rect x="6.8493%" y="213" width="1.3699%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="7.0993%" y="223.50"></text></g><g><title>`0x7FF829210F02 (1 samples, 1.37%)</title><rect x="8.2192%" y="229" width="1.3699%" height="15" fill="rgb(241,131,45)" fg:x="6" fg:w="1"/><text x="8.4692%" y="239.50"></text></g><g><title>`0x7FF8292106F7 (1 samples, 1.37%)</title><rect x="8.2192%" y="213" width="1.3699%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="8.4692%" y="223.50"></text></g><g><title>`0x7FF82921086B (1 samples, 1.37%)</title><rect x="8.2192%" y="197" width="1.3699%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="8.4692%" y="207.50"></text></g><g><title>`0x7FF82924DC94 (1 samples, 1.37%)</title><rect x="8.2192%" y="181" width="1.3699%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="8.4692%" y="191.50"></text></g><g><title>`0x7FF8291C4AAA (1 samples, 1.37%)</title><rect x="9.5890%" y="197" width="1.3699%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="9.8390%" y="207.50"></text></g><g><title>`0x7FF8291C4D42 (1 samples, 1.37%)</title><rect x="9.5890%" y="181" width="1.3699%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="9.8390%" y="191.50"></text></g><g><title>`0x7FF82924D9F4 (1 samples, 1.37%)</title><rect x="9.5890%" y="165" width="1.3699%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="9.8390%" y="175.50"></text></g><g><title>`0x7FF8291CFB53 (3 samples, 4.11%)</title><rect x="8.2192%" y="261" width="4.1096%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="3"/><text x="8.4692%" y="271.50">`0x7..</text></g><g><title>`0x7FF82921020F (3 samples, 4.11%)</title><rect x="8.2192%" y="245" width="4.1096%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="3"/><text x="8.4692%" y="255.50">`0x7..</text></g><g><title>`0x7FF829210F70 (2 samples, 2.74%)</title><rect x="9.5890%" y="229" width="2.7397%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="2"/><text x="9.8390%" y="239.50">`0..</text></g><g><title>`0x7FF829211243 (2 samples, 2.74%)</title><rect x="9.5890%" y="213" width="2.7397%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="2"/><text x="9.8390%" y="223.50">`0..</text></g><g><title>`0x7FF8291C4C14 (1 samples, 1.37%)</title><rect x="10.9589%" y="197" width="1.3699%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="11.2089%" y="207.50"></text></g><g><title>`0x7FF8291C7B29 (1 samples, 1.37%)</title><rect x="10.9589%" y="181" width="1.3699%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="11.2089%" y="191.50"></text></g><g><title>`0x7FF8291C88A8 (1 samples, 1.37%)</title><rect x="10.9589%" y="165" width="1.3699%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="11.2089%" y="175.50"></text></g><g><title>`0x7FF8291C4479 (1 samples, 1.37%)</title><rect x="10.9589%" y="149" width="1.3699%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="1"/><text x="11.2089%" y="159.50"></text></g><g><title>`0x7FF8291C4C14 (1 samples, 1.37%)</title><rect x="10.9589%" y="133" width="1.3699%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="11.2089%" y="143.50"></text></g><g><title>`0x7FF8291C7B29 (1 samples, 1.37%)</title><rect x="10.9589%" y="117" width="1.3699%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="1"/><text x="11.2089%" y="127.50"></text></g><g><title>`0x7FF8291C812E (1 samples, 1.37%)</title><rect x="10.9589%" y="101" width="1.3699%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="1"/><text x="11.2089%" y="111.50"></text></g><g><title>`0x7FF82925436F (1 samples, 1.37%)</title><rect x="10.9589%" y="85" width="1.3699%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="1"/><text x="11.2089%" y="95.50"></text></g><g><title>`0x7FF826A205A2 (4 samples, 5.48%)</title><rect x="8.2192%" y="357" width="5.4795%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="4"/><text x="8.4692%" y="367.50">`0x7FF8..</text></g><g><title>`0x7FF826A219C7 (4 samples, 5.48%)</title><rect x="8.2192%" y="341" width="5.4795%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="4"/><text x="8.4692%" y="351.50">`0x7FF8..</text></g><g><title>`0x7FF826A1C050 (4 samples, 5.48%)</title><rect x="8.2192%" y="325" width="5.4795%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="4"/><text x="8.4692%" y="335.50">`0x7FF8..</text></g><g><title>`0x7FF826C6DB72 (4 samples, 5.48%)</title><rect x="8.2192%" y="309" width="5.4795%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="4"/><text x="8.4692%" y="319.50">`0x7FF8..</text></g><g><title>`0x7FF8291C6AF4 (4 samples, 5.48%)</title><rect x="8.2192%" y="293" width="5.4795%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="4"/><text x="8.4692%" y="303.50">`0x7FF8..</text></g><g><title>`0x7FF8291C73E4 (4 samples, 5.48%)</title><rect x="8.2192%" y="277" width="5.4795%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="4"/><text x="8.4692%" y="287.50">`0x7FF8..</text></g><g><title>`0x7FF8291CFBAE (1 samples, 1.37%)</title><rect x="12.3288%" y="261" width="1.3699%" height="15" fill="rgb(206,27,48)" fg:x="9" fg:w="1"/><text x="12.5788%" y="271.50"></text></g><g><title>`0x7FF8291ED947 (1 samples, 1.37%)</title><rect x="12.3288%" y="245" width="1.3699%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="1"/><text x="12.5788%" y="255.50"></text></g><g><title>`0x7FF82921D110 (1 samples, 1.37%)</title><rect x="12.3288%" y="229" width="1.3699%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="1"/><text x="12.5788%" y="239.50"></text></g><g><title>`0x7FF82921D08A (1 samples, 1.37%)</title><rect x="12.3288%" y="213" width="1.3699%" height="15" fill="rgb(247,123,22)" fg:x="9" fg:w="1"/><text x="12.5788%" y="223.50"></text></g><g><title>`0x7FF82921D2F7 (1 samples, 1.37%)</title><rect x="12.3288%" y="197" width="1.3699%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="1"/><text x="12.5788%" y="207.50"></text></g><g><title>`0x7FF8291C9A1D (1 samples, 1.37%)</title><rect x="12.3288%" y="181" width="1.3699%" height="15" fill="rgb(231,145,46)" fg:x="9" fg:w="1"/><text x="12.5788%" y="191.50"></text></g><g><title>`0x7FF8285B78CA (1 samples, 1.37%)</title><rect x="12.3288%" y="165" width="1.3699%" height="15" fill="rgb(251,118,11)" fg:x="9" fg:w="1"/><text x="12.5788%" y="175.50"></text></g><g><title>`0x7FF8285E096D (1 samples, 1.37%)</title><rect x="12.3288%" y="149" width="1.3699%" height="15" fill="rgb(217,147,25)" fg:x="9" fg:w="1"/><text x="12.5788%" y="159.50"></text></g><g><title>`0x7FF8285C9F44 (1 samples, 1.37%)</title><rect x="12.3288%" y="133" width="1.3699%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="12.5788%" y="143.50"></text></g><g><title>`0x7FF8285C9D40 (1 samples, 1.37%)</title><rect x="12.3288%" y="117" width="1.3699%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="12.5788%" y="127.50"></text></g><g><title>`0x7FF8291DB44D (1 samples, 1.37%)</title><rect x="12.3288%" y="101" width="1.3699%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="12.5788%" y="111.50"></text></g><g><title>`0x7FF8291DDBFA (1 samples, 1.37%)</title><rect x="12.3288%" y="85" width="1.3699%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="12.5788%" y="95.50"></text></g><g><title>`0x7FF8291BE37B (1 samples, 1.37%)</title><rect x="12.3288%" y="69" width="1.3699%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="12.5788%" y="79.50"></text></g><g><title>`0x7FF8291BE715 (1 samples, 1.37%)</title><rect x="12.3288%" y="53" width="1.3699%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="12.5788%" y="63.50"></text></g><g><title>`0x7FF82924D7F4 (1 samples, 1.37%)</title><rect x="12.3288%" y="37" width="1.3699%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="12.5788%" y="47.50"></text></g><g><title>`0x7FF826A2045F (5 samples, 6.85%)</title><rect x="8.2192%" y="373" width="6.8493%" height="15" fill="rgb(234,67,33)" fg:x="6" fg:w="5"/><text x="8.4692%" y="383.50">`0x7FF826..</text></g><g><title>`0x7FF826A205BC (1 samples, 1.37%)</title><rect x="13.6986%" y="357" width="1.3699%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="13.9486%" y="367.50"></text></g><g><title>`0x7FF8273EE3EB (1 samples, 1.37%)</title><rect x="13.6986%" y="341" width="1.3699%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="13.9486%" y="351.50"></text></g><g><title>`0x7FF82920EF7D (1 samples, 1.37%)</title><rect x="13.6986%" y="325" width="1.3699%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="13.9486%" y="335.50"></text></g><g><title>`0x7FF82920F1CA (1 samples, 1.37%)</title><rect x="13.6986%" y="309" width="1.3699%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="13.9486%" y="319.50"></text></g><g><title>`0x7FF8291C9A1D (1 samples, 1.37%)</title><rect x="13.6986%" y="293" width="1.3699%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="13.9486%" y="303.50"></text></g><g><title>`0x7FF8285B793D (1 samples, 1.37%)</title><rect x="13.6986%" y="277" width="1.3699%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="13.9486%" y="287.50"></text></g><g><title>`0x7FF8285EA173 (1 samples, 1.37%)</title><rect x="13.6986%" y="261" width="1.3699%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="13.9486%" y="271.50"></text></g><g><title>`0x7FF8285EA553 (1 samples, 1.37%)</title><rect x="13.6986%" y="245" width="1.3699%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="13.9486%" y="255.50"></text></g><g><title>`0x7FF8285ECF19 (1 samples, 1.37%)</title><rect x="13.6986%" y="229" width="1.3699%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="13.9486%" y="239.50"></text></g><g><title>`0x7FF8285F7337 (1 samples, 1.37%)</title><rect x="13.6986%" y="213" width="1.3699%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="13.9486%" y="223.50"></text></g><g><title>`0x7FF8291D47B1 (1 samples, 1.37%)</title><rect x="15.0685%" y="309" width="1.3699%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="15.3185%" y="319.50"></text></g><g><title>`0x7FF8291D5B74 (1 samples, 1.37%)</title><rect x="15.0685%" y="293" width="1.3699%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="15.3185%" y="303.50"></text></g><g><title>`0x7FF8291D6F37 (1 samples, 1.37%)</title><rect x="15.0685%" y="277" width="1.3699%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="1"/><text x="15.3185%" y="287.50"></text></g><g><title>`0x7FF8291B9B1A (1 samples, 1.37%)</title><rect x="15.0685%" y="261" width="1.3699%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="1"/><text x="15.3185%" y="271.50"></text></g><g><title>`0x7FF82924D8B4 (1 samples, 1.37%)</title><rect x="15.0685%" y="245" width="1.3699%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="1"/><text x="15.3185%" y="255.50"></text></g><g><title>voxer.exe`alloc::vec::Vec&lt;array$&lt;i32,3&gt;,alloc::alloc::Global&gt;::push (4 samples, 5.48%)</title><rect x="16.4384%" y="293" width="5.4795%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="4"/><text x="16.6884%" y="303.50">voxer.e..</text></g><g><title>voxer.exe`core::ptr::write (4 samples, 5.48%)</title><rect x="16.4384%" y="277" width="5.4795%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="4"/><text x="16.6884%" y="287.50">voxer.e..</text></g><g><title>voxer.exe`alloc::vec::Vec&lt;array$&lt;i32,3&gt;,alloc::alloc::Global&gt;::swap_remove (1 samples, 1.37%)</title><rect x="21.9178%" y="293" width="1.3699%" height="15" fill="rgb(211,81,21)" fg:x="16" fg:w="1"/><text x="22.1678%" y="303.50"></text></g><g><title>voxer.exe`core::ptr::mut_ptr::impl$0::add (1 samples, 1.37%)</title><rect x="21.9178%" y="277" width="1.3699%" height="15" fill="rgb(208,190,38)" fg:x="16" fg:w="1"/><text x="22.1678%" y="287.50"></text></g><g><title>voxer.exe`alloc::vec::impl$13::index(alloc::vec::Vec (3 samples, 4.11%)</title><rect x="23.2877%" y="293" width="4.1096%" height="15" fill="rgb(235,213,38)" fg:x="17" fg:w="3"/><text x="23.5377%" y="303.50">voxe..</text></g><g><title>voxer.exe`std::sys::pal::windows::time::impl$18::eq (3 samples, 4.11%)</title><rect x="23.2877%" y="277" width="4.1096%" height="15" fill="rgb(237,122,38)" fg:x="17" fg:w="3"/><text x="23.5377%" y="287.50">voxe..</text></g><g><title>voxer.exe`core::time::impl$19::eq (3 samples, 4.11%)</title><rect x="23.2877%" y="261" width="4.1096%" height="15" fill="rgb(244,218,35)" fg:x="17" fg:w="3"/><text x="23.5377%" y="271.50">voxe..</text></g><g><title>voxer.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.37%)</title><rect x="27.3973%" y="293" width="1.3699%" height="15" fill="rgb(240,68,47)" fg:x="20" fg:w="1"/><text x="27.6473%" y="303.50"></text></g><g><title>voxer.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 1.37%)</title><rect x="27.3973%" y="277" width="1.3699%" height="15" fill="rgb(210,16,53)" fg:x="20" fg:w="1"/><text x="27.6473%" y="287.50"></text></g><g><title>voxer.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 1.37%)</title><rect x="27.3973%" y="261" width="1.3699%" height="15" fill="rgb(235,124,12)" fg:x="20" fg:w="1"/><text x="27.6473%" y="271.50"></text></g><g><title>voxer.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 1.37%)</title><rect x="27.3973%" y="245" width="1.3699%" height="15" fill="rgb(224,169,11)" fg:x="20" fg:w="1"/><text x="27.6473%" y="255.50"></text></g><g><title>voxer.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 1.37%)</title><rect x="27.3973%" y="229" width="1.3699%" height="15" fill="rgb(250,166,2)" fg:x="20" fg:w="1"/><text x="27.6473%" y="239.50"></text></g><g><title>voxer.exe`alloc::alloc::dealloc (1 samples, 1.37%)</title><rect x="27.3973%" y="213" width="1.3699%" height="15" fill="rgb(242,216,29)" fg:x="20" fg:w="1"/><text x="27.6473%" y="223.50"></text></g><g><title>voxer.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 1.37%)</title><rect x="27.3973%" y="197" width="1.3699%" height="15" fill="rgb(230,116,27)" fg:x="20" fg:w="1"/><text x="27.6473%" y="207.50"></text></g><g><title>voxer.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 1.37%)</title><rect x="27.3973%" y="181" width="1.3699%" height="15" fill="rgb(228,99,48)" fg:x="20" fg:w="1"/><text x="27.6473%" y="191.50"></text></g><g><title>voxer.exe`std::sys::alloc::windows::get_process_heap (1 samples, 1.37%)</title><rect x="27.3973%" y="165" width="1.3699%" height="15" fill="rgb(253,11,6)" fg:x="20" fg:w="1"/><text x="27.6473%" y="175.50"></text></g><g><title>`0x7FF8291D47B1 (1 samples, 1.37%)</title><rect x="27.3973%" y="149" width="1.3699%" height="15" fill="rgb(247,143,39)" fg:x="20" fg:w="1"/><text x="27.6473%" y="159.50"></text></g><g><title>`0x7FF8291D5B74 (1 samples, 1.37%)</title><rect x="27.3973%" y="133" width="1.3699%" height="15" fill="rgb(236,97,10)" fg:x="20" fg:w="1"/><text x="27.6473%" y="143.50"></text></g><g><title>`0x7FF8291D6F37 (1 samples, 1.37%)</title><rect x="27.3973%" y="117" width="1.3699%" height="15" fill="rgb(233,208,19)" fg:x="20" fg:w="1"/><text x="27.6473%" y="127.50"></text></g><g><title>`0x7FF8291B9B1A (1 samples, 1.37%)</title><rect x="27.3973%" y="101" width="1.3699%" height="15" fill="rgb(216,164,2)" fg:x="20" fg:w="1"/><text x="27.6473%" y="111.50"></text></g><g><title>`0x7FF82924D8B4 (1 samples, 1.37%)</title><rect x="27.3973%" y="85" width="1.3699%" height="15" fill="rgb(220,129,5)" fg:x="20" fg:w="1"/><text x="27.6473%" y="95.50"></text></g><g><title>voxer.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$ (20 samples, 27.40%)</title><rect x="28.7671%" y="293" width="27.3973%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="20"/><text x="29.0171%" y="303.50">voxer.exe`core::slice::impl$0::get_unchecked..</text></g><g><title>voxer.exe`std::sys::pal::windows::time::impl$18::eq (20 samples, 27.40%)</title><rect x="28.7671%" y="277" width="27.3973%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="20"/><text x="29.0171%" y="287.50">voxer.exe`std::sys::pal::windows::time::impl..</text></g><g><title>voxer.exe`core::time::impl$19::eq (20 samples, 27.40%)</title><rect x="28.7671%" y="261" width="27.3973%" height="15" fill="rgb(251,28,31)" fg:x="21" fg:w="20"/><text x="29.0171%" y="271.50">voxer.exe`core::time::impl$19::eq</text></g><g><title>voxer.exe`core::num::niche_types::impl$8::eq (3 samples, 4.11%)</title><rect x="52.0548%" y="245" width="4.1096%" height="15" fill="rgb(233,223,10)" fg:x="38" fg:w="3"/><text x="52.3048%" y="255.50">voxe..</text></g><g><title>voxer.exe`enum2$&lt;core::option::Option&lt;std::time::Instant&gt; &gt;::unwrap(enum2$&lt;core::option::Option (5 samples, 6.85%)</title><rect x="56.1644%" y="293" width="6.8493%" height="15" fill="rgb(215,21,27)" fg:x="41" fg:w="5"/><text x="56.4144%" y="303.50">voxer.exe..</text></g><g><title>voxer.exe`alloc::vec::spec_from_elem::impl$0::from_elem (5 samples, 6.85%)</title><rect x="56.1644%" y="277" width="6.8493%" height="15" fill="rgb(232,23,21)" fg:x="41" fg:w="5"/><text x="56.4144%" y="287.50">voxer.exe..</text></g><g><title>voxer.exe`alloc::vec::Vec&lt;std::time::Instant,alloc::alloc::Global&gt;::extend_with (5 samples, 6.85%)</title><rect x="56.1644%" y="261" width="6.8493%" height="15" fill="rgb(244,5,23)" fg:x="41" fg:w="5"/><text x="56.4144%" y="271.50">voxer.exe..</text></g><g><title>voxer.exe`core::ptr::write (5 samples, 6.85%)</title><rect x="56.1644%" y="245" width="6.8493%" height="15" fill="rgb(226,81,46)" fg:x="41" fg:w="5"/><text x="56.4144%" y="255.50">voxer.exe..</text></g><g><title>voxer.exe`core::num::impl$8::wrapping_add (1 samples, 1.37%)</title><rect x="67.1233%" y="277" width="1.3699%" height="15" fill="rgb(247,70,30)" fg:x="49" fg:w="1"/><text x="67.3733%" y="287.50"></text></g><g><title>voxer.exe`__scrt_common_main_seh() (49 samples, 67.12%)</title><rect x="8.2192%" y="389" width="67.1233%" height="15" fill="rgb(212,68,19)" fg:x="6" fg:w="49"/><text x="8.4692%" y="399.50">voxer.exe`__scrt_common_main_seh()</text></g><g><title>voxer.exe`invoke_main() (44 samples, 60.27%)</title><rect x="15.0685%" y="373" width="60.2740%" height="15" fill="rgb(240,187,13)" fg:x="11" fg:w="44"/><text x="15.3185%" y="383.50">voxer.exe`invoke_main()</text></g><g><title>voxer.exe`main (44 samples, 60.27%)</title><rect x="15.0685%" y="357" width="60.2740%" height="15" fill="rgb(223,113,26)" fg:x="11" fg:w="44"/><text x="15.3185%" y="367.50">voxer.exe`main</text></g><g><title>voxer.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (44 samples, 60.27%)</title><rect x="15.0685%" y="341" width="60.2740%" height="15" fill="rgb(206,192,2)" fg:x="11" fg:w="44"/><text x="15.3185%" y="351.50">voxer.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>voxer.exe`voxer::main (44 samples, 60.27%)</title><rect x="15.0685%" y="325" width="60.2740%" height="15" fill="rgb(241,108,4)" fg:x="11" fg:w="44"/><text x="15.3185%" y="335.50">voxer.exe`voxer::main</text></g><g><title>voxer.exe`voxer::debug (43 samples, 58.90%)</title><rect x="16.4384%" y="309" width="58.9041%" height="15" fill="rgb(247,173,49)" fg:x="12" fg:w="43"/><text x="16.6884%" y="319.50">voxer.exe`voxer::debug</text></g><g><title>voxer.exe`smallhash::u32x3_to_18_bits (9 samples, 12.33%)</title><rect x="63.0137%" y="293" width="12.3288%" height="15" fill="rgb(224,114,35)" fg:x="46" fg:w="9"/><text x="63.2637%" y="303.50">voxer.exe`smallhas..</text></g><g><title>voxer.exe`core::num::impl$8::wrapping_mul (5 samples, 6.85%)</title><rect x="68.4932%" y="277" width="6.8493%" height="15" fill="rgb(245,159,27)" fg:x="50" fg:w="5"/><text x="68.7432%" y="287.50">voxer.exe..</text></g><g><title>`0x7FF8291FCC91 (55 samples, 75.34%)</title><rect x="1.3699%" y="421" width="75.3425%" height="15" fill="rgb(245,172,44)" fg:x="1" fg:w="55"/><text x="1.6199%" y="431.50">`0x7FF8291FCC91</text></g><g><title>`0x7FF8273E7374 (55 samples, 75.34%)</title><rect x="1.3699%" y="405" width="75.3425%" height="15" fill="rgb(236,23,11)" fg:x="1" fg:w="55"/><text x="1.6199%" y="415.50">`0x7FF8273E7374</text></g><g><title>voxer.exe`mainCRTStartup(void*) (1 samples, 1.37%)</title><rect x="75.3425%" y="389" width="1.3699%" height="15" fill="rgb(205,117,38)" fg:x="55" fg:w="1"/><text x="75.5925%" y="399.50"></text></g><g><title>`0x7FF8292820DB (1 samples, 1.37%)</title><rect x="76.7123%" y="373" width="1.3699%" height="15" fill="rgb(237,72,25)" fg:x="56" fg:w="1"/><text x="76.9623%" y="383.50"></text></g><g><title>`0x7FF8291E34F1 (1 samples, 1.37%)</title><rect x="76.7123%" y="357" width="1.3699%" height="15" fill="rgb(244,70,9)" fg:x="56" fg:w="1"/><text x="76.9623%" y="367.50"></text></g><g><title>`0x7FF8291E3528 (1 samples, 1.37%)</title><rect x="76.7123%" y="341" width="1.3699%" height="15" fill="rgb(217,125,39)" fg:x="56" fg:w="1"/><text x="76.9623%" y="351.50"></text></g><g><title>`0x7FF829282895 (1 samples, 1.37%)</title><rect x="78.0822%" y="373" width="1.3699%" height="15" fill="rgb(235,36,10)" fg:x="57" fg:w="1"/><text x="78.3322%" y="383.50"></text></g><g><title>`0x7FF8291F2EA0 (1 samples, 1.37%)</title><rect x="78.0822%" y="357" width="1.3699%" height="15" fill="rgb(251,123,47)" fg:x="57" fg:w="1"/><text x="78.3322%" y="367.50"></text></g><g><title>`0x7FF8291F30E5 (1 samples, 1.37%)</title><rect x="78.0822%" y="341" width="1.3699%" height="15" fill="rgb(221,13,13)" fg:x="57" fg:w="1"/><text x="78.3322%" y="351.50"></text></g><g><title>`0x7FF8291F2F86 (1 samples, 1.37%)</title><rect x="78.0822%" y="325" width="1.3699%" height="15" fill="rgb(238,131,9)" fg:x="57" fg:w="1"/><text x="78.3322%" y="335.50"></text></g><g><title>`0x7FF829250D84 (1 samples, 1.37%)</title><rect x="78.0822%" y="309" width="1.3699%" height="15" fill="rgb(211,50,8)" fg:x="57" fg:w="1"/><text x="78.3322%" y="319.50"></text></g><g><title>`0x7FF82928334C (1 samples, 1.37%)</title><rect x="79.4521%" y="373" width="1.3699%" height="15" fill="rgb(245,182,24)" fg:x="58" fg:w="1"/><text x="79.7021%" y="383.50"></text></g><g><title>`0x7FF82920FCC2 (1 samples, 1.37%)</title><rect x="79.4521%" y="357" width="1.3699%" height="15" fill="rgb(242,14,37)" fg:x="58" fg:w="1"/><text x="79.7021%" y="367.50"></text></g><g><title>`0x7FF82920FD98 (1 samples, 1.37%)</title><rect x="79.4521%" y="341" width="1.3699%" height="15" fill="rgb(246,228,12)" fg:x="58" fg:w="1"/><text x="79.7021%" y="351.50"></text></g><g><title>`0x7FF82924DB54 (1 samples, 1.37%)</title><rect x="79.4521%" y="325" width="1.3699%" height="15" fill="rgb(213,55,15)" fg:x="58" fg:w="1"/><text x="79.7021%" y="335.50"></text></g><g><title>`0x7FF8291C7B29 (1 samples, 1.37%)</title><rect x="80.8219%" y="261" width="1.3699%" height="15" fill="rgb(209,9,3)" fg:x="59" fg:w="1"/><text x="81.0719%" y="271.50"></text></g><g><title>`0x7FF8291C8C6C (1 samples, 1.37%)</title><rect x="80.8219%" y="245" width="1.3699%" height="15" fill="rgb(230,59,30)" fg:x="59" fg:w="1"/><text x="81.0719%" y="255.50"></text></g><g><title>`0x7FF8291CAC3F (1 samples, 1.37%)</title><rect x="80.8219%" y="229" width="1.3699%" height="15" fill="rgb(209,121,21)" fg:x="59" fg:w="1"/><text x="81.0719%" y="239.50"></text></g><g><title>`0x7FF8291CC309 (1 samples, 1.37%)</title><rect x="80.8219%" y="213" width="1.3699%" height="15" fill="rgb(220,109,13)" fg:x="59" fg:w="1"/><text x="81.0719%" y="223.50"></text></g><g><title>`0x7FF8291E26B7 (1 samples, 1.37%)</title><rect x="82.1918%" y="245" width="1.3699%" height="15" fill="rgb(232,18,1)" fg:x="60" fg:w="1"/><text x="82.4418%" y="255.50"></text></g><g><title>`0x7FF8291CFB31 (3 samples, 4.11%)</title><rect x="80.8219%" y="325" width="4.1096%" height="15" fill="rgb(215,41,42)" fg:x="59" fg:w="3"/><text x="81.0719%" y="335.50">`0x7..</text></g><g><title>`0x7FF82921C2ED (3 samples, 4.11%)</title><rect x="80.8219%" y="309" width="4.1096%" height="15" fill="rgb(224,123,36)" fg:x="59" fg:w="3"/><text x="81.0719%" y="319.50">`0x7..</text></g><g><title>`0x7FF8291C4479 (3 samples, 4.11%)</title><rect x="80.8219%" y="293" width="4.1096%" height="15" fill="rgb(240,125,3)" fg:x="59" fg:w="3"/><text x="81.0719%" y="303.50">`0x7..</text></g><g><title>`0x7FF8291C4C14 (3 samples, 4.11%)</title><rect x="80.8219%" y="277" width="4.1096%" height="15" fill="rgb(205,98,50)" fg:x="59" fg:w="3"/><text x="81.0719%" y="287.50">`0x7..</text></g><g><title>`0x7FF8291C7BC4 (2 samples, 2.74%)</title><rect x="82.1918%" y="261" width="2.7397%" height="15" fill="rgb(205,185,37)" fg:x="60" fg:w="2"/><text x="82.4418%" y="271.50">`0..</text></g><g><title>`0x7FF8291E26C6 (1 samples, 1.37%)</title><rect x="83.5616%" y="245" width="1.3699%" height="15" fill="rgb(238,207,15)" fg:x="61" fg:w="1"/><text x="83.8116%" y="255.50"></text></g><g><title>`0x7FF8291CFB5D (1 samples, 1.37%)</title><rect x="84.9315%" y="325" width="1.3699%" height="15" fill="rgb(213,199,42)" fg:x="62" fg:w="1"/><text x="85.1815%" y="335.50"></text></g><g><title>`0x7FF829210048 (1 samples, 1.37%)</title><rect x="84.9315%" y="309" width="1.3699%" height="15" fill="rgb(235,201,11)" fg:x="62" fg:w="1"/><text x="85.1815%" y="319.50"></text></g><g><title>`0x7FF829210128 (1 samples, 1.37%)</title><rect x="84.9315%" y="293" width="1.3699%" height="15" fill="rgb(207,46,11)" fg:x="62" fg:w="1"/><text x="85.1815%" y="303.50"></text></g><g><title>`0x7FF8291E2665 (1 samples, 1.37%)</title><rect x="84.9315%" y="277" width="1.3699%" height="15" fill="rgb(241,35,35)" fg:x="62" fg:w="1"/><text x="85.1815%" y="287.50"></text></g><g><title>`0x7FF826C89AE2 (1 samples, 1.37%)</title><rect x="86.3014%" y="213" width="1.3699%" height="15" fill="rgb(243,32,47)" fg:x="63" fg:w="1"/><text x="86.5514%" y="223.50"></text></g><g><title>`0x7FF826C8A9CC (1 samples, 1.37%)</title><rect x="86.3014%" y="197" width="1.3699%" height="15" fill="rgb(247,202,23)" fg:x="63" fg:w="1"/><text x="86.5514%" y="207.50"></text></g><g><title>`0x7FF826C8AA8A (1 samples, 1.37%)</title><rect x="86.3014%" y="181" width="1.3699%" height="15" fill="rgb(219,102,11)" fg:x="63" fg:w="1"/><text x="86.5514%" y="191.50"></text></g><g><title>`0x7FF826C8AB29 (1 samples, 1.37%)</title><rect x="86.3014%" y="165" width="1.3699%" height="15" fill="rgb(243,110,44)" fg:x="63" fg:w="1"/><text x="86.5514%" y="175.50"></text></g><g><title>`0x7FF826C51B74 (1 samples, 1.37%)</title><rect x="86.3014%" y="149" width="1.3699%" height="15" fill="rgb(222,74,54)" fg:x="63" fg:w="1"/><text x="86.5514%" y="159.50"></text></g><g><title>`0x7FF826C8954D (2 samples, 2.74%)</title><rect x="86.3014%" y="229" width="2.7397%" height="15" fill="rgb(216,99,12)" fg:x="63" fg:w="2"/><text x="86.5514%" y="239.50">`0..</text></g><g><title>`0x7FF826C89B22 (1 samples, 1.37%)</title><rect x="87.6712%" y="213" width="1.3699%" height="15" fill="rgb(226,22,26)" fg:x="64" fg:w="1"/><text x="87.9212%" y="223.50"></text></g><g><title>`0x7FF826C8A7F3 (1 samples, 1.37%)</title><rect x="87.6712%" y="197" width="1.3699%" height="15" fill="rgb(217,163,10)" fg:x="64" fg:w="1"/><text x="87.9212%" y="207.50"></text></g><g><title>`0x7FF826C894EF (1 samples, 1.37%)</title><rect x="87.6712%" y="181" width="1.3699%" height="15" fill="rgb(213,25,53)" fg:x="64" fg:w="1"/><text x="87.9212%" y="191.50"></text></g><g><title>`0x7FF826C8A0A8 (1 samples, 1.37%)</title><rect x="87.6712%" y="165" width="1.3699%" height="15" fill="rgb(252,105,26)" fg:x="64" fg:w="1"/><text x="87.9212%" y="175.50"></text></g><g><title>`0x7FF826C8A2C0 (1 samples, 1.37%)</title><rect x="87.6712%" y="149" width="1.3699%" height="15" fill="rgb(220,39,43)" fg:x="64" fg:w="1"/><text x="87.9212%" y="159.50"></text></g><g><title>`0x7FF826C8A5F1 (1 samples, 1.37%)</title><rect x="87.6712%" y="133" width="1.3699%" height="15" fill="rgb(229,68,48)" fg:x="64" fg:w="1"/><text x="87.9212%" y="143.50"></text></g><g><title>`0x7FF82924D5D4 (1 samples, 1.37%)</title><rect x="87.6712%" y="117" width="1.3699%" height="15" fill="rgb(252,8,32)" fg:x="64" fg:w="1"/><text x="87.9212%" y="127.50"></text></g><g><title>`0x7FF826C89577 (1 samples, 1.37%)</title><rect x="89.0411%" y="229" width="1.3699%" height="15" fill="rgb(223,20,43)" fg:x="65" fg:w="1"/><text x="89.2911%" y="239.50"></text></g><g><title>`0x7FF826CD5D72 (1 samples, 1.37%)</title><rect x="89.0411%" y="213" width="1.3699%" height="15" fill="rgb(229,81,49)" fg:x="65" fg:w="1"/><text x="89.2911%" y="223.50"></text></g><g><title>`0x7FF826CD50BE (1 samples, 1.37%)</title><rect x="89.0411%" y="197" width="1.3699%" height="15" fill="rgb(236,28,36)" fg:x="65" fg:w="1"/><text x="89.2911%" y="207.50"></text></g><g><title>`0x7FF826CD352D (1 samples, 1.37%)</title><rect x="89.0411%" y="181" width="1.3699%" height="15" fill="rgb(249,185,26)" fg:x="65" fg:w="1"/><text x="89.2911%" y="191.50"></text></g><g><title>`0x7FF826CD31B8 (1 samples, 1.37%)</title><rect x="89.0411%" y="165" width="1.3699%" height="15" fill="rgb(249,174,33)" fg:x="65" fg:w="1"/><text x="89.2911%" y="175.50"></text></g><g><title>`0x7FF826CD3EBA (1 samples, 1.37%)</title><rect x="89.0411%" y="149" width="1.3699%" height="15" fill="rgb(233,201,37)" fg:x="65" fg:w="1"/><text x="89.2911%" y="159.50"></text></g><g><title>`0x7FF826CD33D1 (1 samples, 1.37%)</title><rect x="89.0411%" y="133" width="1.3699%" height="15" fill="rgb(221,78,26)" fg:x="65" fg:w="1"/><text x="89.2911%" y="143.50"></text></g><g><title>`0x7FF826CD59DE (1 samples, 1.37%)</title><rect x="89.0411%" y="117" width="1.3699%" height="15" fill="rgb(250,127,30)" fg:x="65" fg:w="1"/><text x="89.2911%" y="127.50"></text></g><g><title>`0x7FF826CA954C (1 samples, 1.37%)</title><rect x="89.0411%" y="101" width="1.3699%" height="15" fill="rgb(230,49,44)" fg:x="65" fg:w="1"/><text x="89.2911%" y="111.50"></text></g><g><title>`0x7FF82924ECE4 (1 samples, 1.37%)</title><rect x="89.0411%" y="85" width="1.3699%" height="15" fill="rgb(229,67,23)" fg:x="65" fg:w="1"/><text x="89.2911%" y="95.50"></text></g><g><title>`0x7FF8292837CE (8 samples, 10.96%)</title><rect x="80.8219%" y="373" width="10.9589%" height="15" fill="rgb(249,83,47)" fg:x="59" fg:w="8"/><text x="81.0719%" y="383.50">`0x7FF8292837CE</text></g><g><title>`0x7FF8291C6AF4 (8 samples, 10.96%)</title><rect x="80.8219%" y="357" width="10.9589%" height="15" fill="rgb(215,43,3)" fg:x="59" fg:w="8"/><text x="81.0719%" y="367.50">`0x7FF8291C6AF4</text></g><g><title>`0x7FF8291C73E4 (8 samples, 10.96%)</title><rect x="80.8219%" y="341" width="10.9589%" height="15" fill="rgb(238,154,13)" fg:x="59" fg:w="8"/><text x="81.0719%" y="351.50">`0x7FF8291C73E4</text></g><g><title>`0x7FF8291CFBAE (4 samples, 5.48%)</title><rect x="86.3014%" y="325" width="5.4795%" height="15" fill="rgb(219,56,2)" fg:x="63" fg:w="4"/><text x="86.5514%" y="335.50">`0x7FF8..</text></g><g><title>`0x7FF8291ED947 (4 samples, 5.48%)</title><rect x="86.3014%" y="309" width="5.4795%" height="15" fill="rgb(233,0,4)" fg:x="63" fg:w="4"/><text x="86.5514%" y="319.50">`0x7FF8..</text></g><g><title>`0x7FF82921D110 (4 samples, 5.48%)</title><rect x="86.3014%" y="293" width="5.4795%" height="15" fill="rgb(235,30,7)" fg:x="63" fg:w="4"/><text x="86.5514%" y="303.50">`0x7FF8..</text></g><g><title>`0x7FF82921D08A (4 samples, 5.48%)</title><rect x="86.3014%" y="277" width="5.4795%" height="15" fill="rgb(250,79,13)" fg:x="63" fg:w="4"/><text x="86.5514%" y="287.50">`0x7FF8..</text></g><g><title>`0x7FF82921D2F7 (4 samples, 5.48%)</title><rect x="86.3014%" y="261" width="5.4795%" height="15" fill="rgb(211,146,34)" fg:x="63" fg:w="4"/><text x="86.5514%" y="271.50">`0x7FF8..</text></g><g><title>`0x7FF8291C9A1D (4 samples, 5.48%)</title><rect x="86.3014%" y="245" width="5.4795%" height="15" fill="rgb(228,22,38)" fg:x="63" fg:w="4"/><text x="86.5514%" y="255.50">`0x7FF8..</text></g><g><title>`0x7FF826C8957E (1 samples, 1.37%)</title><rect x="90.4110%" y="229" width="1.3699%" height="15" fill="rgb(235,168,5)" fg:x="66" fg:w="1"/><text x="90.6610%" y="239.50"></text></g><g><title>`0x7FF826CD6567 (1 samples, 1.37%)</title><rect x="90.4110%" y="213" width="1.3699%" height="15" fill="rgb(221,155,16)" fg:x="66" fg:w="1"/><text x="90.6610%" y="223.50"></text></g><g><title>`0x7FF826CF2DE4 (1 samples, 1.37%)</title><rect x="90.4110%" y="197" width="1.3699%" height="15" fill="rgb(215,215,53)" fg:x="66" fg:w="1"/><text x="90.6610%" y="207.50"></text></g><g><title>`0x7FF826CD8AB1 (1 samples, 1.37%)</title><rect x="90.4110%" y="181" width="1.3699%" height="15" fill="rgb(223,4,10)" fg:x="66" fg:w="1"/><text x="90.6610%" y="191.50"></text></g><g><title>`0x7FF826CE4D18 (1 samples, 1.37%)</title><rect x="90.4110%" y="165" width="1.3699%" height="15" fill="rgb(234,103,6)" fg:x="66" fg:w="1"/><text x="90.6610%" y="175.50"></text></g><g><title>`0x7FF826CE4F60 (1 samples, 1.37%)</title><rect x="90.4110%" y="149" width="1.3699%" height="15" fill="rgb(227,97,0)" fg:x="66" fg:w="1"/><text x="90.6610%" y="159.50"></text></g><g><title>`0x7FF826CAAF37 (1 samples, 1.37%)</title><rect x="90.4110%" y="133" width="1.3699%" height="15" fill="rgb(234,150,53)" fg:x="66" fg:w="1"/><text x="90.6610%" y="143.50"></text></g><g><title>`0x7FF8291FA496 (1 samples, 1.37%)</title><rect x="90.4110%" y="117" width="1.3699%" height="15" fill="rgb(228,201,54)" fg:x="66" fg:w="1"/><text x="90.6610%" y="127.50"></text></g><g><title>`0x7FF82924D734 (1 samples, 1.37%)</title><rect x="90.4110%" y="101" width="1.3699%" height="15" fill="rgb(222,22,37)" fg:x="66" fg:w="1"/><text x="90.6610%" y="111.50"></text></g><g><title>`0x7FF82928389D (1 samples, 1.37%)</title><rect x="91.7808%" y="373" width="1.3699%" height="15" fill="rgb(237,53,32)" fg:x="67" fg:w="1"/><text x="92.0308%" y="383.50"></text></g><g><title>`0x7FF8291C70A6 (1 samples, 1.37%)</title><rect x="91.7808%" y="357" width="1.3699%" height="15" fill="rgb(233,25,53)" fg:x="67" fg:w="1"/><text x="92.0308%" y="367.50"></text></g><g><title>`0x7FF8291C01FD (1 samples, 1.37%)</title><rect x="91.7808%" y="341" width="1.3699%" height="15" fill="rgb(210,40,34)" fg:x="67" fg:w="1"/><text x="92.0308%" y="351.50"></text></g><g><title>`0x7FF8291C0446 (1 samples, 1.37%)</title><rect x="91.7808%" y="325" width="1.3699%" height="15" fill="rgb(241,220,44)" fg:x="67" fg:w="1"/><text x="92.0308%" y="335.50"></text></g><g><title>`0x7FF8291E20F9 (1 samples, 1.37%)</title><rect x="91.7808%" y="309" width="1.3699%" height="15" fill="rgb(235,28,35)" fg:x="67" fg:w="1"/><text x="92.0308%" y="319.50"></text></g><g><title>`0x7FF82920411F (1 samples, 1.37%)</title><rect x="91.7808%" y="293" width="1.3699%" height="15" fill="rgb(210,56,17)" fg:x="67" fg:w="1"/><text x="92.0308%" y="303.50"></text></g><g><title>`0x7FF8292838B0 (1 samples, 1.37%)</title><rect x="93.1507%" y="373" width="1.3699%" height="15" fill="rgb(224,130,29)" fg:x="68" fg:w="1"/><text x="93.4007%" y="383.50"></text></g><g><title>`0x7FF82922C41F (1 samples, 1.37%)</title><rect x="93.1507%" y="357" width="1.3699%" height="15" fill="rgb(235,212,8)" fg:x="68" fg:w="1"/><text x="93.4007%" y="367.50"></text></g><g><title>`0x7FF82924D734 (1 samples, 1.37%)</title><rect x="93.1507%" y="341" width="1.3699%" height="15" fill="rgb(223,33,50)" fg:x="68" fg:w="1"/><text x="93.4007%" y="351.50"></text></g><g><title>`0x7FF8291C88A8 (1 samples, 1.37%)</title><rect x="94.5205%" y="341" width="1.3699%" height="15" fill="rgb(219,149,13)" fg:x="69" fg:w="1"/><text x="94.7705%" y="351.50"></text></g><g><title>`0x7FF8291C4479 (1 samples, 1.37%)</title><rect x="94.5205%" y="325" width="1.3699%" height="15" fill="rgb(250,156,29)" fg:x="69" fg:w="1"/><text x="94.7705%" y="335.50"></text></g><g><title>`0x7FF8291C4C14 (1 samples, 1.37%)</title><rect x="94.5205%" y="309" width="1.3699%" height="15" fill="rgb(216,193,19)" fg:x="69" fg:w="1"/><text x="94.7705%" y="319.50"></text></g><g><title>`0x7FF8291C79D2 (1 samples, 1.37%)</title><rect x="94.5205%" y="293" width="1.3699%" height="15" fill="rgb(216,135,14)" fg:x="69" fg:w="1"/><text x="94.7705%" y="303.50"></text></g><g><title>`0x7FF8291C5082 (1 samples, 1.37%)</title><rect x="94.5205%" y="277" width="1.3699%" height="15" fill="rgb(241,47,5)" fg:x="69" fg:w="1"/><text x="94.7705%" y="287.50"></text></g><g><title>`0x7FF82924DEF4 (1 samples, 1.37%)</title><rect x="94.5205%" y="261" width="1.3699%" height="15" fill="rgb(233,42,35)" fg:x="69" fg:w="1"/><text x="94.7705%" y="271.50"></text></g><g><title>`0x7FF829283B6D (2 samples, 2.74%)</title><rect x="94.5205%" y="373" width="2.7397%" height="15" fill="rgb(231,13,6)" fg:x="69" fg:w="2"/><text x="94.7705%" y="383.50">`0..</text></g><g><title>`0x7FF8291C7B29 (2 samples, 2.74%)</title><rect x="94.5205%" y="357" width="2.7397%" height="15" fill="rgb(207,181,40)" fg:x="69" fg:w="2"/><text x="94.7705%" y="367.50">`0..</text></g><g><title>`0x7FF8291C8948 (1 samples, 1.37%)</title><rect x="95.8904%" y="341" width="1.3699%" height="15" fill="rgb(254,173,49)" fg:x="70" fg:w="1"/><text x="96.1404%" y="351.50"></text></g><g><title>`0x7FF8291BF49F (1 samples, 1.37%)</title><rect x="95.8904%" y="325" width="1.3699%" height="15" fill="rgb(221,1,38)" fg:x="70" fg:w="1"/><text x="96.1404%" y="335.50"></text></g><g><title>`0x7FF8291C2A66 (1 samples, 1.37%)</title><rect x="95.8904%" y="309" width="1.3699%" height="15" fill="rgb(206,124,46)" fg:x="70" fg:w="1"/><text x="96.1404%" y="319.50"></text></g><g><title>`0x7FF8291C2BD9 (1 samples, 1.37%)</title><rect x="95.8904%" y="293" width="1.3699%" height="15" fill="rgb(249,21,11)" fg:x="70" fg:w="1"/><text x="96.1404%" y="303.50"></text></g><g><title>`0x7FF829250304 (1 samples, 1.37%)</title><rect x="95.8904%" y="277" width="1.3699%" height="15" fill="rgb(222,201,40)" fg:x="70" fg:w="1"/><text x="96.1404%" y="287.50"></text></g><g><title>`0x7FF826A0710E (1 samples, 1.37%)</title><rect x="97.2603%" y="245" width="1.3699%" height="15" fill="rgb(235,61,29)" fg:x="71" fg:w="1"/><text x="97.5103%" y="255.50"></text></g><g><title>`0x7FF826A07214 (1 samples, 1.37%)</title><rect x="97.2603%" y="229" width="1.3699%" height="15" fill="rgb(219,207,3)" fg:x="71" fg:w="1"/><text x="97.5103%" y="239.50"></text></g><g><title>`0x7FF826A076CC (1 samples, 1.37%)</title><rect x="97.2603%" y="213" width="1.3699%" height="15" fill="rgb(222,56,46)" fg:x="71" fg:w="1"/><text x="97.5103%" y="223.50"></text></g><g><title>`0x7FF826A0794A (1 samples, 1.37%)</title><rect x="97.2603%" y="197" width="1.3699%" height="15" fill="rgb(239,76,54)" fg:x="71" fg:w="1"/><text x="97.5103%" y="207.50"></text></g><g><title>`0x7FF826A07BD8 (1 samples, 1.37%)</title><rect x="97.2603%" y="181" width="1.3699%" height="15" fill="rgb(231,124,27)" fg:x="71" fg:w="1"/><text x="97.5103%" y="191.50"></text></g><g><title>`0x7FF826C56D90 (1 samples, 1.37%)</title><rect x="97.2603%" y="165" width="1.3699%" height="15" fill="rgb(249,195,6)" fg:x="71" fg:w="1"/><text x="97.5103%" y="175.50"></text></g><g><title>all (73 samples, 100%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(237,174,47)" fg:x="0" fg:w="73"/><text x="0.2500%" y="447.50"></text></g><g><title>`0x7FF829225C1E (17 samples, 23.29%)</title><rect x="76.7123%" y="421" width="23.2877%" height="15" fill="rgb(206,201,31)" fg:x="56" fg:w="17"/><text x="76.9623%" y="431.50">`0x7FF829225C1E</text></g><g><title>`0x7FF829225C73 (17 samples, 23.29%)</title><rect x="76.7123%" y="405" width="23.2877%" height="15" fill="rgb(231,57,52)" fg:x="56" fg:w="17"/><text x="76.9623%" y="415.50">`0x7FF829225C73</text></g><g><title>`0x7FF829225DEB (17 samples, 23.29%)</title><rect x="76.7123%" y="389" width="23.2877%" height="15" fill="rgb(248,177,22)" fg:x="56" fg:w="17"/><text x="76.9623%" y="399.50">`0x7FF829225DEB</text></g><g><title>`0x7FF829283CB2 (2 samples, 2.74%)</title><rect x="97.2603%" y="373" width="2.7397%" height="15" fill="rgb(215,211,37)" fg:x="71" fg:w="2"/><text x="97.5103%" y="383.50">`0..</text></g><g><title>`0x7FF82921D110 (2 samples, 2.74%)</title><rect x="97.2603%" y="357" width="2.7397%" height="15" fill="rgb(241,128,51)" fg:x="71" fg:w="2"/><text x="97.5103%" y="367.50">`0..</text></g><g><title>`0x7FF82921D110 (2 samples, 2.74%)</title><rect x="97.2603%" y="341" width="2.7397%" height="15" fill="rgb(227,165,31)" fg:x="71" fg:w="2"/><text x="97.5103%" y="351.50">`0..</text></g><g><title>`0x7FF82921D08A (2 samples, 2.74%)</title><rect x="97.2603%" y="325" width="2.7397%" height="15" fill="rgb(228,167,24)" fg:x="71" fg:w="2"/><text x="97.5103%" y="335.50">`0..</text></g><g><title>`0x7FF82921D2F7 (2 samples, 2.74%)</title><rect x="97.2603%" y="309" width="2.7397%" height="15" fill="rgb(228,143,12)" fg:x="71" fg:w="2"/><text x="97.5103%" y="319.50">`0..</text></g><g><title>`0x7FF8291C9A1D (2 samples, 2.74%)</title><rect x="97.2603%" y="293" width="2.7397%" height="15" fill="rgb(249,149,8)" fg:x="71" fg:w="2"/><text x="97.5103%" y="303.50">`0..</text></g><g><title>`0x7FF826A16216 (2 samples, 2.74%)</title><rect x="97.2603%" y="277" width="2.7397%" height="15" fill="rgb(243,35,44)" fg:x="71" fg:w="2"/><text x="97.5103%" y="287.50">`0..</text></g><g><title>`0x7FF826A17730 (2 samples, 2.74%)</title><rect x="97.2603%" y="261" width="2.7397%" height="15" fill="rgb(246,89,9)" fg:x="71" fg:w="2"/><text x="97.5103%" y="271.50">`0..</text></g><g><title>`0x7FF826A1F9C9 (1 samples, 1.37%)</title><rect x="98.6301%" y="245" width="1.3699%" height="15" fill="rgb(233,213,13)" fg:x="72" fg:w="1"/><text x="98.8801%" y="255.50"></text></g><g><title>`0x7FF826A1FA14 (1 samples, 1.37%)</title><rect x="98.6301%" y="229" width="1.3699%" height="15" fill="rgb(233,141,41)" fg:x="72" fg:w="1"/><text x="98.8801%" y="239.50"></text></g><g><title>`0x7FF826A0754A (1 samples, 1.37%)</title><rect x="98.6301%" y="213" width="1.3699%" height="15" fill="rgb(239,167,4)" fg:x="72" fg:w="1"/><text x="98.8801%" y="223.50"></text></g><g><title>`0x7FF826A058F7 (1 samples, 1.37%)</title><rect x="98.6301%" y="197" width="1.3699%" height="15" fill="rgb(209,217,16)" fg:x="72" fg:w="1"/><text x="98.8801%" y="207.50"></text></g></svg></svg>